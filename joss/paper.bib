@article{Bezanson2017,
  author = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B.},
  title = {{J}ulia: A Fresh Approach to Numerical Computing},
  journal = {SIAM Review},
  volume = {59},
  number = {1},
  pages = {65-98},
  year = {2017},
  doi = {10.1137/141000671},
  URL = {https://doi.org/10.1137/141000671},
  eprint = {https://doi.org/10.1137/141000671},
  abstract = { Bridging cultures that have often been distant, Julia combines expertise from the diverse fields of computer science and computational science to create a new approach to numerical computing. Julia is designed to be easy and fast and questions notions generally held to be “laws of nature" by practitioners of numerical computing: \beginlist \item High-level dynamic programs have to be slow. \item One must prototype in one language and then rewrite in another language for speed or deployment. \item There are parts of a system appropriate for the programmer, and other parts that are best left untouched as they have been built by the experts. \endlist We introduce the Julia programming language and its design---a dance between specialization and abstraction. Specialization allows for custom treatment. Multiple dispatch, a technique from computer science, picks the right algorithm for the right circumstance. Abstraction, which is what good computation is really about, recognizes what remains the same after differences are stripped away. Abstractions in mathematics are captured as code through another technique from computer science, generic programming. Julia shows that one can achieve machine performance without sacrificing human convenience. }
}

@article{10.1145/3511528.3511535,
  author = {Gowda, Shashi and Ma, Yingbo and Cheli, Alessandro and Gw\'{o}\'{z}zd\'{z}, Maja and Shah, Viral B. and Edelman, Alan and Rackauckas, Christopher},
  title = {High-Performance Symbolic-Numerics via Multiple Dispatch},
  year = {2022},
  issue_date = {September 2021},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {55},
  number = {3},
  issn = {1932-2240},
  url = {https://doi.org/10.1145/3511528.3511535},
  doi = {10.1145/3511528.3511535},
  abstract = {As mathematical computing becomes more democratized in high-level languages, high-performance symbolic-numeric systems are necessary for domain scientists and engineers to get the best performance out of their machine without deep knowledge of code optimization. Naturally, users need different term types either to have different algebraic properties for them, or to use efficient data structures. To this end, we developed Symbolics.jl, an extendable symbolic system which uses dynamic multiple dispatch to change behavior depending on the domain needs. In this work we detail an underlying abstract term interface which allows for speed without sacrificing generality. We show that by formalizing a generic API on actions independent of implementation, we can retroactively add optimized data structures to our system without changing the pre-existing term rewriters. We showcase how this can be used to optimize term construction and give a 113x acceleration on general symbolic transformations. Further, we show that such a generic API allows for complementary term-rewriting implementations. Exploiting this feature, we demonstrate the ability to swap between classical term-rewriting simplifiers and e-graph-based term-rewriting simplifiers. We illustrate how this symbolic system improves numerical computing tasks by showcasing an e-graph ruleset which minimizes the number of CPU cycles during expression evaluation, and demonstrate how it simplifies a real-world reaction-network simulation to halve the runtime. Additionally, we show a reaction-diffusion partial differential equation solver which is able to be automatically converted into symbolic expressions via multiple dispatch tracing, which is subsequently accelerated and parallelized to give a 157x simulation speedup. Together, this presents Symbolics.jl as a next-generation symbolic-numeric computing environment geared towards modeling and simulation.},
  journal = {ACM Commun. Comput. Algebra},
  month = {jan},
  pages = {92–96},
  numpages = {5}
}

@misc{ma2021modelingtoolkit,
  title={ModelingToolkit: A Composable Graph Transformation System For Equation-Based Modeling},
  author={Yingbo Ma and Shashi Gowda and Ranjan Anantharaman and Chris Laughman and Viral Shah and Chris Rackauckas},
  year={2021},
  eprint={2103.05244},
  archivePrefix={arXiv},
  doi={10.48550/arXiv.2103.05244},
  url={https://doi.org/10.48550/arXiv.2103.05244},
  primaryClass={cs.MS}
}

@article{Tikhonov1943OnTS,
  title={On the stability of inverse problems},
  author={A. N. Tikhonov},
  journal={Proceedings of the USSR Academy of Sciences},
  year={1943},
  volume={39},
  pages={195-198},
  url={https://api.semanticscholar.org/CorpusID:202866372}
}

@Article{amt-14-7909-2021,
  AUTHOR = {Petters, M. D.},
  TITLE = {Revisiting matrix-based inversion of scanning mobility particle sizer (SMPS) and humidified tandem
  differential mobility analyzer (HTDMA) data},
  JOURNAL = {Atmospheric Measurement Techniques},
  VOLUME = {14},
  YEAR = {2021},
  NUMBER = {12},
  PAGES = {7909--7928},
  URL = {https://amt.copernicus.org/articles/14/7909/2021/},
  DOI = {10.5194/amt-14-7909-2021}
}

@Inbook{Curry1988,
  author="Curry, H. B.
  and Schoenberg, I. J.",
  editor="de Boor, Carl",
  title="On P{\'o}lya Frequency Functions IV: The Fundamental Spline Functions and their Limits",
  bookTitle="I. J. Schoenberg Selected Papers",
  year="1988",
  publisher="Birkh{\"a}user Boston",
  address="Boston, MA",
  pages="347--383",
  abstract="The present paper was written in 1945 and completed by 1947 (see the abstract [3]) but for no good reason has so far not been published. It appears now in a somewhat revised and improved form.",
  isbn="978-1-4899-0433-1",
  doi="10.1007/978-1-4899-0433-1_17",
  url="https://doi.org/10.1007/978-1-4899-0433-1_17"
}

@article{DEBOOR197250,
  title = {On calculating with B-splines},
  journal = {Journal of Approximation Theory},
  volume = {6},
  number = {1},
  pages = {50-62},
  year = {1972},
  issn = {0021-9045},
  doi = {10.1016/0021-9045(72)90080-9},
  url = {https://www.sciencedirect.com/science/article/pii/0021904572900809},
  author = {Carl {de Boor}}
}

@article{10.1145/321607.321609,
  author = {Akima, Hiroshi},
  title = {A New Method of Interpolation and Smooth Curve Fitting Based on Local Procedures},
  year = {1970},
  issue_date = {Oct. 1970},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {17},
  number = {4},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/321607.321609},
  doi = {10.1145/321607.321609},
  abstract = {A new mathematical method is developed for interpolation from a given set of data points in a plane and for fitting a smooth curve to the points. This method is devised in such a way that the resultant curve will pass through the given points and will appear smooth and natural. It is based on a piecewise function composed of a set of polynomials, each of degree three, at most, and applicable to successive intervals of the given points. In this method, the slope of the curve is determined at each given point locally, and each polynomial representing a portion of the curve between a pair of given points is determined by the coordinates of and the slopes at the points. Comparison indicates that the curve obtained by this new method is closer to a manually drawn curve than those drawn by other mathematical methods.},
  journal = {J. ACM},
  month = {oct},
  pages = {589–602},
  numpages = {14}
}

@Inbook{Schoenberg1988,
  author="Schoenberg, I. J.",
  editor="de Boor, Carl",
  title="Contributions to the Problem of Approximation of Equidistant Data by Analytic Functions",
  bookTitle="I. J. Schoenberg Selected Papers",
  year="1988",
  publisher="Birkh{\"a}user Boston",
  address="Boston, MA",
  pages="3--57",
  isbn="978-1-4899-0433-1",
  doi="10.1007/978-1-4899-0433-1_1",
  url="https://doi.org/10.1007/978-1-4899-0433-1_1"
}

@book{lagrange1898lectures,
  title={Lectures on elementary mathematics, by Joseph Louis Lagrange; tr. by Thomas J. McCormack},
  author={Lagrange, J.L.},
  url={https://books.google.co.in/books?id=7h9G0AEACAAJ},
  year={1898},
  publisher={Open court publishing Company}
}

@article{doi:10.1137/0905021,
  author = {Fritsch, F. N. and Butland, J.},
  title = {A Method for Constructing Local Monotone Piecewise Cubic Interpolants},
  journal = {SIAM Journal on Scientific and Statistical Computing},
  volume = {5},
  number = {2},
  pages = {300-304},
  year = {1984},
  doi = {10.1137/0905021},
  URL = {https://doi.org/10.1137/0905021},
  eprint = {https://doi.org/10.1137/0905021},
  abstract = { A method is described for producing monotone piecewise cubic interpolants to monotone data which is completely local and which is extremely simple to implement. }
}
