name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6' # Minimum Julia version required
          - '1'
#          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@dc323e67f16fb5f7663d20ff7941f27f5809e9b6
      - uses: julia-actions/setup-julia@f40c4b69330df1d22e7590c12e76dc2f9c66e0bc
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@70655ec8323daeeaa7ef06d7c56e1b9191396cbe
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@252d4686a50ca4e21207e09c8ec7b2907867a4f5
      - uses: julia-actions/julia-runtest@fa1e6fac940a2785c35dddb5fbb98ed945e3d2a2
      - name: Test plotting recipes with Weave
        run: |
          # Install packages
          julia --color=yes -e 'using Pkg; Pkg.add(["Weave", "Plots"])'
          # Process jmd
          julia --color=yes --code-coverage -e 'using Weave; weave("example/DataInterpolations.jmd")'
      - uses: julia-actions/julia-processcoverage@03114f09f119417c3242a9fb6e0b722676aedf38
      - uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192
        with:
          file: lcov.info
#   docs:
#     name: Documentation
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@dc323e67f16fb5f7663d20ff7941f27f5809e9b6
#       - uses: julia-actions/setup-julia@f40c4b69330df1d22e7590c12e76dc2f9c66e0bc
#         with:
#           version: '1'
#       - run: |
#           julia --project=docs -e '
#             using Pkg
#             Pkg.develop(PackageSpec(path=pwd()))
#             Pkg.instantiate()'
#       - run: |
#           julia --project=docs -e '
#             using Documenter: doctest
#             using MYPACKAGE
#             doctest(MYPACKAGE)' # change MYPACKAGE to the name of your package
#       - run: julia --project=docs docs/make.jl
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
